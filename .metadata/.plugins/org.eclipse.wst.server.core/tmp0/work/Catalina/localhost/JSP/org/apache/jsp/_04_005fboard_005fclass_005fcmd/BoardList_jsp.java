/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-05-19 08:40:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._04_005fboard_005fclass_005fcmd;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mvc.board.service.*;
import mvc.command.board.*;
import mvc.control.board.*;
import mvc.control.board.*;
import java.util.List;
import mvc.model.board.*;

public final class BoardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("mvc.control.board");
    _jspx_imports_packages.add("mvc.model.board");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("mvc.board.service");
    _jspx_imports_packages.add("mvc.command.board");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
 String projectName = "/JSP"; 
      out.write('\n');
      out.write('\n');
      mvc.model.board.BoardRec board = null;
      board = (mvc.model.board.BoardRec) _jspx_page_context.getAttribute("board", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (board == null){
        board = new mvc.model.board.BoardRec();
        _jspx_page_context.setAttribute("board", board, javax.servlet.jsp.PageContext.PAGE_SCOPE);
        out.write('\n');
        out.write('	');
        org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("board"), request);
        out.write('\n');
      }
      out.write('\n');

	// Service에 getArticleList()함수를 호출하여 전체 메세지 레코드 검색 
	List<BoardRec> mList = null;
	ListArticleService service = ListArticleService.getInstance();
	mList = service.getArticleList();

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>게시글 목록</title>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<BODY>\n");
      out.write("\n");
      out.write("\t<h3>게시판 목록</h3>\n");
      out.write("\n");
      out.write("\t<table border=\"1\" bordercolor=\"darkblue\">\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>글번호</td>\n");
      out.write("\t\t\t<td>제 목</td>\n");
      out.write("\t\t\t<td>작성자</td>\n");
      out.write("\t\t\t<td>작성일</td>\n");
      out.write("\t\t\t<td>조회수</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t");

			if (mList.isEmpty()) {
		
      out.write("\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td colspan=\"5\">등록된 게시물이 없습니다.</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t");

			} else {
		
      out.write('\n');
      out.write('	');
      out.write('	');

			for (BoardRec rec : mList) {
		
      out.write("\n");
      out.write("\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\n");
      out.write("\t\t\t<td>");
      out.print(rec.getArticleId());
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\t<a href=\"BoardView.jsp?articleId=");
      out.print(rec.getArticleId());
      out.write("\"></a>\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t\t<td> \n");
      out.write("\t\t\t");
 for(int j=0; j<rec.getLevel();j++){ 
      out.write("\n");
      out.write("\t\t\t\t&nbsp;\n");
      out.write("\t\t\t");
} //공백처리
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t");
 for(int j=0; j<rec.getLevel();j++){ 
      out.write("\n");
      out.write("\t\t\t\t<img src='imgs/board_re.gif'>\n");
      out.write("\n");
      out.write("\t\t\t");
} //공백에 이미지 추가
      out.write("\n");
      out.write("\t\t\t\t<a href=\"");
      out.print( projectName );
      out.write("/BoardControl?cmd=list-page\">");
      out.print(rec.getTitle());
      out.write("</a>\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t\t<td>");
      out.print(rec.getWriterName());
      out.write("\n");
      out.write("\t\t\t\t<a href=\"BoardView.jsp?articleId=");
      out.print(rec.getArticleId());
      out.write("\"> </a>\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t\t<td>");
      out.print(rec.getPostingDate());
      out.write("\n");
      out.write("\t\t\t\t<a href=\"BoardView.jsp?articleId=");
      out.print(rec.getArticleId());
      out.write("\"> </a>\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t\t<td>");
      out.print(rec.getReadCount());
      out.write("\n");
      out.write("\t\t\t\t<a href=\"BoardView.jsp?articleId=");
      out.print(rec.getArticleId());
      out.write("\"> </a>\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t");

			} // end of for
		
      out.write('\n');
      out.write('	');
      out.write('	');

			} // end else
		
      out.write("\n");
      out.write("\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td colspan=\"5\"><a href=\"");
      out.print(projectName);
      out.write("/BoardControl?cmd=input-form\">글쓰기</a></td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</table>\n");
      out.write("</BODY>\n");
      out.write("</HTML>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
